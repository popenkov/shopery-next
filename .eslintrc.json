{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "unused-imports", "css-import-order"],
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "next",
    "plugin:storybook/recommended",
    "prettier",
    "@feature-sliced/eslint-config/rules/import-order",
    "@feature-sliced/eslint-config/rules/public-api",
    "@feature-sliced/eslint-config/rules/layers-slices"
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "rules": {
    "no-undef": "off",
    "unused-imports/no-unused-imports": "error",
    "import/no-unused-modules": "error",
    "react/react-in-jsx-scope": "off",
    "react/jsx-uses-react": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "semi": "off",
    "@typescript-eslint/semi": ["warn"],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "pathGroups": [
          {
            "pattern": "@(react)",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "widgets/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "features/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "entities/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "shared/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          },
          {
            "pattern": "../**",
            "group": "parent",
            "position": "before"
          },
          {
            "pattern": "./**",
            "group": "sibling",
            "position": "before"
          },
          {
            "pattern": "**/*.module.scss",
            "group": "sibling",
            "position": "after"
          }
        ],
        "distinctGroup": false,
        "warnOnUnassignedImports": true,
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    // "no-restricted-imports": [
    //   "error",
    //   {
    //     "patterns": [
    //       // Private imports are prohibited, use public imports instead
    //       "app/**",
    //       "pages/*/**",
    //       "features/*/**",
    //       "entities/*/**",
    //       "shared/*/*/**", // Для shared +1 уровень, т.к. там чаще мы обращаемся к конкретной библиотеке/компоненты
    //       // Prefer absolute imports instead of relatives (for root modules)
    //       "../**/app",
    //       "../**/pages",
    //       "../**/features",
    //       "../**/entities",
    //       "../**/shared"
    //     ]
    //   }
    // ],
    // feature-sliced/public-api
    // "import/no-internal-modules": "warn" // @ 1,
    // "import/no-internal-modules": [
    //   "error",
    //   {
    //     "allow": ["./**", "@public/*"] //Used for allow import local modules
    //   }
    // ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/app/**"]
          },
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/pages/*/**"]
          },
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/widgets/*/**"]
          },
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/features/*/**"]
          },
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/entities/*/**"]
          },
          {
            "message": "Private imports are prohibited, use public imports instead",
            "group": ["@/shared/*/*/**"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/app"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/pages"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/widgets"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/features"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/entities"]
          },
          {
            "message": "Prefer absolute imports instead of relatives (for root modules)",
            "group": ["../**/shared"]
          }
        ]
      }
    ],
    "boundaries/element-types": [
      "error",
      {
        "default": "allow",
        "message": "${file.type} is not allowed to import (${dependency.type})",
        "rules": [
          {
            "from": ["shared"],
            "disallow": ["app", "pages", "widgets", "features", "entities"],
            "message": "Shared module must not import upper layers (${dependency.type})"
          },
          {
            "from": ["entities"],
            "message": "Entity must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages", "widgets", "features"]
          },
          {
            "from": ["entities"],
            "message": "Entity must not import other entity",
            "disallow": [
              [
                "entities",
                {
                  "entity": "!${entity}"
                }
              ]
            ]
          },
          {
            "from": ["features"],
            "message": "Feature must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages", "widgets"]
          },
          {
            "from": ["features"],
            "message": "Feature must not import other feature",
            "disallow": [
              [
                "features",
                {
                  "feature": "!${feature}"
                }
              ]
            ]
          },
          {
            "from": ["widgets"],
            "message": "Feature must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages"]
          },
          {
            "from": ["widgets"],
            "message": "Widget must not import other widget",
            "disallow": [
              [
                "widgets",
                {
                  "widget": "!${widget}"
                }
              ]
            ]
          },
          {
            "from": ["pages"],
            "message": "Page must not import upper layers (${dependency.type})",
            "disallow": ["app"]
          },
          {
            "from": ["pages"],
            "message": "Page must not import other page",
            "disallow": [
              [
                "pages",
                {
                  "page": "!${page}"
                }
              ]
            ]
          }
        ]
      }
    ]

    // "import/no-internal-modules": [
    //   "warn",
    //   {
    //     "allow": ["@public/*"]
    //   }
    // ],
    // feature-sliced/layers-slices
    // "boundaries/element-types": "warn" // @ 1,
  },
  "overrides": [
    { "files": ["**/*.test.*"], "rules": { "boundaries/element-types": "off" } },
    {
      "files": ["./**/*"],
      "rules": {
        "no-restricted-imports": "off"
      }
    }
  ]
}
